name: Build BindCraft Container (Minimal)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Free up disk space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h
    
    - name: Create minimal Dockerfile
      run: |
        cat > Dockerfile << 'EOF'
        FROM python:3.10-slim
        
        # Install system dependencies
        RUN apt-get update && apt-get install -y \
                git wget curl build-essential \
                libgfortran5 libgomp1 \
                ca-certificates && \
            rm -rf /var/lib/apt/lists/*
        
        # Install Python packages one by one
        RUN pip install --no-cache-dir numpy==2.0.1
        RUN pip install --no-cache-dir scipy==1.15.3
        RUN pip install --no-cache-dir pandas matplotlib biopython
        RUN pip install --no-cache-dir jax==0.4.35
        RUN pip install --no-cache-dir jaxlib==0.4.35
        
        # Install BindCraft dependencies - fix pdbfixer installation
        RUN pip install --no-cache-dir 'pdbfixer @ git+https://github.com/openmm/pdbfixer.git'
        RUN pip install --no-cache-dir pyrosetta-installer
        RUN pip install --no-cache-dir git+https://github.com/sokrypton/ColabDesign.git
        
        # Clone BindCraft
        RUN git clone https://github.com/martinpacesa/BindCraft /BindCraft
        RUN chmod +x /BindCraft/functions/dssp /BindCraft/functions/DAlphaBall.gcc
        RUN mkdir -p /BindCraft/params
        
        # Set environment
        ENV PYTHONPATH="/BindCraft"
        
        WORKDIR /workspace
        
        # Simple entrypoint
        CMD ["python3", "/BindCraft/bindcraft.py", "--help"]
        EOF
    
    - name: Build Docker image
      run: |
        echo "Building minimal BindCraft image..."
        docker build --progress=plain -t bindcraft-minimal .
    
    - name: Test Docker container
      run: |
        echo "Testing container..."
        docker run --rm bindcraft-minimal python3 -c "print('✓ Container works')"
        docker run --rm bindcraft-minimal python3 -c "import numpy; print('✓ NumPy')"
        docker run --rm bindcraft-minimal python3 -c "import jax; print('✓ JAX')"
        docker run --rm bindcraft-minimal ls /BindCraft/
    
    - name: Convert Docker to Singularity format
      run: |
        # Install Singularity for conversion
        sudo apt-get update
        sudo apt-get install -y singularity-container
        
        # Save Docker image as tar
        docker save bindcraft-minimal | gzip > bindcraft_docker.tar.gz
        
        # Create Singularity definition that imports the Docker image
        cat > bindcraft_final.def << 'EOF'
        Bootstrap: docker-archive
        From: bindcraft_docker.tar.gz
        EOF
        
        # Build Singularity container
        sudo singularity build bindcraft.sif bindcraft_final.def
        
        echo "✓ Singularity container created"
        ls -lh bindcraft.sif
    
    - name: Create conversion instructions
      run: |
        cat > CONVERSION_INSTRUCTIONS.txt << 'EOF'
        # Convert Docker image to Singularity
        
        ## Method 1: Direct conversion (if Singularity available)
        gunzip bindcraft.tar.gz
        singularity build bindcraft.sif docker-archive://bindcraft.tar
        
        ## Method 2: Load and use as Docker
        docker load < bindcraft.tar
        docker tag bindcraft-minimal bindcraft:latest
        
        ## Usage:
        # Singularity: singularity run --nv bindcraft.sif --settings config.json
        # Docker: docker run --gpus all -v /data:/workspace bindcraft:latest --settings config.json
        EOF
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: bindcraft-container
        path: |
          bindcraft.sif
        retention-days: 30
    
    - name: Success message
      run: |
        echo "============================================"
        echo "✅ BindCraft Singularity container ready!"
        echo "============================================"
        echo "Container size: $(du -h bindcraft.sif | cut -f1)"
        echo ""
        echo "Download from: Actions → Artifacts → bindcraft-container"
        echo "Usage on Raven: singularity run --nv bindcraft.sif --settings config.json"
